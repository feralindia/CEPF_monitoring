
##--- Load Libs
source("LoadLibs.R", echo=TRUE)
library(zoo)
library(raster)
library(zyp)
library(snow)
source("LoadFuncts.R", echo=TRUE)

##-- select images to work with
execGRASS("g.mapset", mapset='tvdi')
list.Blue <- execGRASS("g.list", type='raster', pattern="Blue.*",
                       mapset='tvdi',  intern=TRUE)

years.Blue <- substr(list.Blue, start=12, stop=15)
years.Blue <- sort(unique(years.Blue))
rc.Blue <- unique(substr(list.Blue, start=6, stop=11))
for(i in 3:length(rc.Blue)){
    sel.Blue <- subset(list.Blue, subset=rc.Blue[i]==substr(list.Blue, start=6, stop=11))
    execGRASS("g.region", raster=sel.Blue[i], res='30')

    ##--create brick of images
    for(j in 1:length(sel.Blue)){
        rst <- paste("rst",j, sep="")
        assign(rst, raster(readRAST6(sel.Blue[j])))
    }
    rst.Blue <- paste("rst", 1:j, sep="")
    modisbrick <- brick(lapply(rst.Blue, get))
    plot(modisbrick)
    
    ## A wrapper function to derive sen's slope (layer 1)
    ## and significant values (layer 2)

                                        # A wrapper function to derive sen's slope (layer 1) and significant values (layer 2)
    r.sen<-function(x) {
        fit<-zyp.trend.vector(x, method="zhang",conf.intervals=T)
                                        #trendp<-fit[3]
                                        #pval<-fit[6]
        return(cbind(fit[3], fit[6]))
    }
                                        #Single core deriving a brick with the slopes and sig #
    ## r3<-calc(modisbrick, fun=function(x){
    ##     res<-t(apply(x,1,r.sen))
    ##     return(res)}
    ##          )

    ## plot(r3)


#### Run function using parallel processing 
### library(snow)
    ff <- function(x){
        calc(x, r.sen)
    }
    ## plot(ff(modisbrick))


    beginCluster(4)
    cl <-getCluster()
    y2 <- clusterR(modisbrick, fun = ff, export = "r.sen")
    resdir <- "/home/pambu/rsb/OngoingProjects/CEPF_monitoring/rdata/results/BlueWater/"
    endCluster()
    plot(y2)
    trend <- raster(y2, layer=1)
    pval <- raster(y2, layer=2)
    trend.out <- paste(resdir,"trend", rc.Blue[i], ".tif", sep="")
    pval.out <- paste(resdir,"pval", rc.Blue[i], ".tif", sep="")
    writeRaster(trend, filename="trend.out", format="GTiff", overwrite=TRUE)
    writeRaster(trend, filename="pval.out", format="GTiff", overwrite=TRUE)
}
